{"version":3,"file":"static/js/758.564436eb.chunk.js","mappings":"yNAEaA,EAAOC,EAAAA,GAAAA,KAAH,8JAQJC,EAAQD,EAAAA,GAAAA,MAAH,qFAKLE,EAAQF,EAAAA,GAAAA,MAAH,qHAMLG,EAASH,EAAAA,GAAAA,OAAH,sJ,kBCfJ,SAASI,EAAT,GAA2C,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,aACvC,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,MAQAC,EAAAA,EAAAA,YAAU,YANU,WAClB,IAAIC,EAAM,EACVV,EAAKW,KAAI,SAAAC,GAAI,OAAKF,GAAOG,OAAOD,EAAKL,MAAxB,IACbC,EAASE,EACV,CAGCI,EACD,IAED,IAAMC,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,OAAtBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MAEd,OAAQf,GACN,IAAK,OACHC,EAAQc,GACR,MACF,IAAK,SACHZ,EAAUY,GAKf,EAED,OACE,UAACxB,EAAD,YACE,SAACE,EAAD,CAAOuB,QAAQ,OAAf,SAAsB,UACtB,SAACtB,EAAD,CACEuB,KAAK,OACLjB,KAAK,OACLe,MAAOf,EACPkB,SAAUN,EACVO,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,SAAC5B,EAAD,CAAOuB,QAAQ,QAAf,SAAuB,WACvB,SAACtB,EAAD,CAAOuB,KAAK,QAAQjB,KAAK,QAAQkB,SAAUN,EAAmBS,UAAQ,KACtE,SAAC5B,EAAD,CAAOuB,QAAQ,SAAf,SAAwB,WACxB,SAACtB,EAAD,CACEuB,KAAK,MACLjB,KAAK,SACLe,MAAOb,EACPgB,SAAUN,EACVO,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,SAAC5B,EAAD,CAAOuB,QAAQ,UAAf,SAAyB,cACzB,SAACtB,EAAD,CAAOuB,KAAK,OAAOjB,KAAK,UAAUkB,SAAUN,EAAmBS,UAAQ,KAEvE,yBACGxB,EAAKW,KAAI,SAAAC,GACR,OACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,gBACEa,IAAG,+CAA0Cb,EAAKc,OAClDC,IAAKf,EAAKW,WAGd,SAAC,KAAD,UAAOX,EAAKW,SACZ,UAAC,KAAD,WAAM,WAASX,EAAKL,UACpB,4BACE,mBAAQqB,QAAS,kBAAM3B,EAAaW,EAAM,EAAzB,EAAjB,SAA8C,OAC9C,4BAASA,EAAKiB,UACd,mBAAQD,QAAS,kBAAM3B,EAAaW,GAAO,EAA1B,EAAjB,SAA+C,WAZxCA,EAAKkB,IAgBnB,OAGH,2BAAK,gBAAcvB,MACnB,SAACT,EAAD,CAAQsB,KAAK,SAAb,SAAsB,aAG3B,C,qQCvFYW,EAAkBpC,EAAAA,GAAAA,QAAH,uFAOfqC,EAAOrC,EAAAA,GAAAA,IAAH,0DAIJsC,EAAStC,EAAAA,GAAAA,IAAH,0DAKNuC,EAAQvC,EAAAA,GAAAA,GAAH,sBAELwC,EAAOxC,EAAAA,GAAAA,GAAH,wMAYJyC,EAAOzC,EAAAA,GAAAA,GAAH,2HAQJ0C,EAAgB1C,EAAAA,GAAAA,IAAH,wEAMbG,EAASH,EAAAA,GAAAA,OAAH,uQ","sources":["components/CartPage/CartPage.Styled.js","components/CartPage/CartPage.js","components/ShopPage/ShopPage.Styled.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  padding: 50px 90px;\n`;\nexport const Label = styled.label`\n  font-size: 20px;\n  color: #1d81af;\n  font-weight: bold;\n`;\nexport const Input = styled.input`\n  color: #000;\n  border: 1px solid #1d81af;\n  border-radius: 5px;\n  margin-bottom: 20px;\n`;\nexport const Button = styled.button`\n  margin-top: 20px;\n  padding: 15px;\n  border: none;\n  background-color: #1d81af;\n  border-radius: 10px;\n  color: #fff;\n`;\n","import { useState, useEffect } from 'react';\n\nimport { Form, Label, Input, Button } from './CartPage.Styled';\n\nimport { List, Item } from './../ShopPage/ShopPage.Styled';\n\nexport default function CardPage({ cart, handleChange }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [price, setPrice] = useState(0);\n\n  const handlePrice = () => {\n    let ans = 0;\n    cart.map(item => (ans += Number(item.price)));\n    setPrice(ans);\n  };\n\n  useEffect(() => {\n    handlePrice();\n  });\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Form>\n      <Label htmlFor=\"name\">Name</Label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleInputChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <Label htmlFor=\"email\">Email</Label>\n      <Input type=\"email\" name=\"email\" onChange={handleInputChange} required />\n      <Label htmlFor=\"number\">Phone</Label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleInputChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Label htmlFor=\"address\">Address:</Label>\n      <Input type=\"text\" name=\"address\" onChange={handleInputChange} required />\n\n      <div>\n        {cart.map(item => {\n          return (\n            <List key={item._id}>\n              <Item>\n                <img\n                  src={`https://deliveryapp-vmua.onrender.com${item.image}`}\n                  alt={item.title}\n                />\n              </Item>\n              <Item>{item.title}</Item>\n              <Item>Price: ${item.price}</Item>\n              <div>\n                <button onClick={() => handleChange(item, 1)}>+</button>\n                <button>{item.amount}</button>\n                <button onClick={() => handleChange(item, -1)}>-</button>\n              </div>\n            </List>\n          );\n        })}\n      </div>\n\n      <div>Total price: {price}</div>\n      <Button type=\"submit\">Submit</Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ShopPageSection = styled.section`\n  margin: 0;\n  padding: 0;\n  displey: flex;\n  width: 100%;\n`;\n\nexport const Wrap = styled.div`\n  width: 100%;\n  displey: flex;\n`;\nexport const Column = styled.div`\n  width: 100%;\n  displey: flex;\n`;\n\nexport const Title = styled.h2``;\n\nexport const List = styled.ul`\n  justify-content: center;\n  align-items: center;\n  margin: 10px;\n  width: 100%;\n  padding: 10px;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ProductScreen = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 20px;\n  padding: 20px;\n  border: none;\n  background-color: transparent;\n  border-radius: 10px;\n  border: 2px solid #1f85cf;\n  color: #131313;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: #1f85cf;\n  }\n`;\n"],"names":["Form","styled","Label","Input","Button","CardPage","cart","handleChange","useState","name","setName","number","setNumber","price","setPrice","useEffect","ans","map","item","Number","handlePrice","handleInputChange","event","target","value","htmlFor","type","onChange","pattern","title","required","src","image","alt","onClick","amount","_id","ShopPageSection","Wrap","Column","Title","List","Item","ProductScreen"],"sourceRoot":""}